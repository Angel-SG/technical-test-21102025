"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/characters/[id]/page",{

/***/ "(app-pages-browser)/./lib/apollo-client.ts":
/*!******************************!*\
  !*** ./lib/apollo-client.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RICK_AND_MORTY_GRAPHQL: function() { return /* binding */ RICK_AND_MORTY_GRAPHQL; },\n/* harmony export */   makeClient: function() { return /* binding */ makeClient; }\n/* harmony export */ });\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \"(app-pages-browser)/./node_modules/@apollo/client/core/ApolloClient.js\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"(app-pages-browser)/./node_modules/@apollo/client/link/http/HttpLink.js\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @apollo/client */ \"(app-pages-browser)/./node_modules/@apollo/client/cache/inmemory/inMemoryCache.js\");\n\nconst RICK_AND_MORTY_GRAPHQL = \"https://rickandmortyapi.com/graphql\";\n/**\n * TODO: Configure Apollo Client for both server and client usage\n * - Consider SSR vs CSR usage\n * - You may need separate server-side and client-side clients\n * - Configure cache policies for pagination/search\n * - Consider using @apollo/experimental-nextjs-app-support for better SSR\n */ function makeClient() {\n    return new _apollo_client__WEBPACK_IMPORTED_MODULE_0__.ApolloClient({\n        link: new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.HttpLink({\n            uri: RICK_AND_MORTY_GRAPHQL,\n            fetch\n        }),\n        cache: new _apollo_client__WEBPACK_IMPORTED_MODULE_2__.InMemoryCache()\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcG9sbG8tY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVFO0FBRWhFLE1BQU1HLHlCQUF5QixzQ0FBc0M7QUFFNUU7Ozs7OztDQU1DLEdBQ00sU0FBU0M7SUFDZCxPQUFPLElBQUlKLHdEQUFZQSxDQUFDO1FBQ3RCSyxNQUFNLElBQUlILG9EQUFRQSxDQUFDO1lBQUVJLEtBQUtIO1lBQXdCSTtRQUFNO1FBQ3hEQyxPQUFPLElBQUlQLHlEQUFhQTtJQUMxQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9hcG9sbG8tY2xpZW50LnRzP2I5NWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBvbGxvQ2xpZW50LCBJbk1lbW9yeUNhY2hlLCBIdHRwTGluayB9IGZyb20gJ0BhcG9sbG8vY2xpZW50JztcblxuZXhwb3J0IGNvbnN0IFJJQ0tfQU5EX01PUlRZX0dSQVBIUUwgPSAnaHR0cHM6Ly9yaWNrYW5kbW9ydHlhcGkuY29tL2dyYXBocWwnO1xuXG4vKipcbiAqIFRPRE86IENvbmZpZ3VyZSBBcG9sbG8gQ2xpZW50IGZvciBib3RoIHNlcnZlciBhbmQgY2xpZW50IHVzYWdlXG4gKiAtIENvbnNpZGVyIFNTUiB2cyBDU1IgdXNhZ2VcbiAqIC0gWW91IG1heSBuZWVkIHNlcGFyYXRlIHNlcnZlci1zaWRlIGFuZCBjbGllbnQtc2lkZSBjbGllbnRzXG4gKiAtIENvbmZpZ3VyZSBjYWNoZSBwb2xpY2llcyBmb3IgcGFnaW5hdGlvbi9zZWFyY2hcbiAqIC0gQ29uc2lkZXIgdXNpbmcgQGFwb2xsby9leHBlcmltZW50YWwtbmV4dGpzLWFwcC1zdXBwb3J0IGZvciBiZXR0ZXIgU1NSXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQ2xpZW50KCkge1xuICByZXR1cm4gbmV3IEFwb2xsb0NsaWVudCh7XG4gICAgbGluazogbmV3IEh0dHBMaW5rKHsgdXJpOiBSSUNLX0FORF9NT1JUWV9HUkFQSFFMLCBmZXRjaCB9KSxcbiAgICBjYWNoZTogbmV3IEluTWVtb3J5Q2FjaGUoKSxcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsiQXBvbGxvQ2xpZW50IiwiSW5NZW1vcnlDYWNoZSIsIkh0dHBMaW5rIiwiUklDS19BTkRfTU9SVFlfR1JBUEhRTCIsIm1ha2VDbGllbnQiLCJsaW5rIiwidXJpIiwiZmV0Y2giLCJjYWNoZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/apollo-client.ts\n"));

/***/ })

});